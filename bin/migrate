#!/usr/bin/env php
<?php

namespace Ferme;

use Exception;
use Ferme\Ferme;
use Ferme\Configuration as FermeConfiguration;
use Ferme\Wiki\Configuration as WikiConfiguration;
use Ferme\Password;
use Ferme\Mails\MailResetWikiAdminPassword;

if (php_sapi_name() !== 'cli') {
    print('CLI only !');
    exit(1);
}

if (!is_dir(__DIR__ . '/../vendor')) {
    print('Vous devez executer "composer install" dans le dossier de la Ferme.');
    exit;
}
include_once __DIR__ . '/../vendor/autoload.php';

if (!is_file(__DIR__ . '/../ferme.config.php')) {
    throw new Exception(
        'Le fichier de configuration est absent.',
        1
    );
}
$fermeConfig = new FermeConfiguration(__DIR__ . '/../ferme.config.php');

try {
    $ferme = new Ferme($fermeConfig);
} catch (Exception $e) {
    print('Erreur fatale (problÃ¨me de configuration ?)<br />');
    print($e->getMessage());
    exit(1);
}

try {
    $ferme->checkInstallation();
} catch (Exception $e) {
    print($e->getMessage());
    exit(1);
}

$ferme->wikis->load();

// Add FermeAdmin user and send new WikiAdmin password to wiki owner.
printf("\nAdd FermeAdmin user and send WikiAdmin password : \n");
foreach($ferme->wikis as $wiki) {
    printf($wiki->name . " : ");

    // If the FermeAdmin account already exists, the migration has already been done.
    if ($wiki->isUserExist("FermeAdmin")) {
        printf("Already migrate\n");
        continue;
    }

    try {
        $wikiAdminPassword = Password::random(12);
        $wiki->setPassword("WikiAdmin", md5($wikiAdminPassword));
        $mail = new MailResetWikiAdminPassword($config, $wiki, $wikiAdminPassword);
        $mail->send();

        $wiki->addAdminUser(
            "FermeAdmin",
            $ferme->config['mail_from'],
            $ferme->config['admin_password'
        ]);
    } catch (Exception $e) {
        printf("Error" . $e->getMessage() . "\n");
        continue;
    }
    printf("OK\n");
}

// Update WikiAdmin email
printf("\nUpdate WikiAdmin email : \n");
foreach($ferme->wikis as $wiki) {
    printf($wiki->name . " : ");
    try {
        $wiki->setUserEmail('WikiAdmin', $wiki->infos['mail']);
    } catch (Exception $e) {
        printf("Error\n");
        continue;
    }
    printf("OK\n");
}

printf("\nUpdate base_url parameter : \n");
foreach($ferme->wikis as $wiki) {
    $wikiName = $wiki->name;
    printf("${wikiName} : ");
    $wakkaConfigFile = "wikis/${wikiName}/wakka.config.php";
    $wikiConf = new WikiConfiguration($wakkaConfigFile);
    $wikiConf['base_url'] = $fermeConfig['base_url'] . "wikis/${wikiName}/?";
    $wikiConf->write($wakkaConfigFile);
    printf("OK\n");
}

printf("\nRemove themes parameters : \n");
foreach($ferme->wikis as $wiki) {
    printf("${$wiki->name} : ");
    $wakkaConfigFile = "wikis/${wikiName}/wakka.config.php";
    $wikiConf = new WikiConfiguration($wakkaConfigFile);
    $changed = false;
    
    if (isset($wikiConf['favorite_theme'])) {
        unset($wikiConf['favorite_theme']);
        $changed = true;
    }
    
    if (isset($wikiConf['favorite_style'])) {
        unset($wikiConf['favorite_style']);
        $changed = true;
    }

    if (isset($wikiConf['favorite_squelette'])) {
        unset($wikiConf['favorite_squelette']);
        $changed = true;
    }

    // TODO : Force themes for all wiki

    $wikiConf['base_url'] = $fermeConfig['base_url'] . "wikis/${$wiki->name}/?";
    try {
        $wikiConf->write($wakkaConfigFile);
    } catch (Exception $e) {
        printf("{$wiki->name} : Error\n");
        continue;
    }

    if ($changed) {
        printf("{$wiki->name} : Updated\n");
        continue;
    }
}

// Update db to UTF8
printf("\nConvert to UTF8 : \n");
foreach($ferme->wikis as $wiki) {
    if ($wiki->isUtf8()) {
        continue;
    }

    $wikiName = $wiki->name;
    $command = "cd wikis/${wikiName}; php handlers/page/dbutf8.php; cd -";
    printf("$wikiName : Update DB to UTF8 :  ");
    if (exec($command) === false) {
        printf("Error\n");
        continue;
    }
    printf("Converted\n");
}

printf("\nUpdate robots.txt\n");
foreach($ferme->wikis as $wiki) {
    $command = "cp robots.txt {$ferme->config['ferme_path']}/{$wiki->name}/}";
    if (exec($command) === false) {
        printf("{$wiki->name} : Error\n");
    }
}